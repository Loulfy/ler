{
  "name" : "gdev",
  "version-string" : "1.0.0",
  "builtin-baseline" : "e85cafa30def190eca0dc1413bf8c04e434af567",
  "dependencies" : [ {
    "name" : "directx-dxc",
    "version>=" : "2024-07-31"
  }, {
    "name" : "vcpkg-cmake-config",
    "version>=" : "2022-02-06#1"
  }, {
    "name" : "vcpkg-cmake",
    "version>=" : "2023-05-04"
  }, {
    "name" : "vulkan-memory-allocator",
    "version>=" : "3.0.1#3"
  }, {
    "name" : "d3d12-memory-allocator",
    "version>=" : "2021-05-05#1",
    "platform" : "windows",
    "$comment" : "  # this is heuristically generated, and may not be correct\n\n  find_package(d3d12-memory-allocator CONFIG REQUIRED)\n\n  target_link_libraries(main PRIVATE unofficial::d3d12-memory-allocator)\n"
  }, {
    "name" : "d3dx12",
    "version>=" : "may2021#1",
    "platform" : "windows"
  }, {
    "name" : "spdlog",
    "version>=" : "1.12.0",
    "$comment" : "    find_package(spdlog CONFIG REQUIRED)\n\n    target_link_libraries(main PRIVATE spdlog::spdlog)\n"
  }, {
    "name" : "spirv-reflect",
    "version>=" : "1.3.236.0",
    "$comment" : "  # this is heuristically generated, and may not be correct\n\n  find_package(unofficial-spirv-reflect CONFIG REQUIRED)\n\n  target_link_libraries(main PRIVATE unofficial::spirv-reflect::spirv-reflect)\n"
  }, {
    "name" : "nlohmann-json",
    "version>=" : "3.11.2",
    "$comment" : "    find_package(nlohmann_json CONFIG REQUIRED)\n\n    target_link_libraries(main PRIVATE nlohmann_json::nlohmann_json)\n"
  }, {
    "name" : "glfw3",
    "version>=" : "3.3.8#3",
    "$comment" : "  # this is heuristically generated, and may not be correct\n\n  find_package(glfw3 CONFIG REQUIRED)\n\n  target_link_libraries(main PRIVATE glfw)\n"
  }, {
    "name" : "gli",
    "version>=" : "2021-07-06#2",
    "$comment" : "  # this is heuristically generated, and may not be correct\n\n  find_package(gli CONFIG REQUIRED)\n\n  target_link_libraries(main PRIVATE gli)\n"
  }, {
    "name" : "stb",
    "version>=" : "2023-04-11#1",
    "$comment" : "    find_package(Stb REQUIRED)\n\n    target_include_directories(main PRIVATE ${Stb_INCLUDE_DIR})\n"
  }, {
    "name" : "dstorage",
    "version>=" : "1.2.2",
    "platform" : "windows",
    "$comment" : "    find_package(dstorage CONFIG REQUIRED)\n\n    target_link_libraries(main PRIVATE Microsoft::DirectStorage)\n"
  }, {
    "name" : "cpp-async",
    "version>=" : "1.1.0"
  }, {
    "name" : "assimp",
    "version>=" : "5.3.1#3",
    "$comment" : "  # this is heuristically generated, and may not be correct\n\n  find_package(assimp CONFIG REQUIRED)\n\n  target_link_libraries(main PRIVATE assimp::assimp)\n"
  }, {
    "name" : "flatbuffers",
    "version>=" : "23.5.26#1",
    "$comment" : "  # this is heuristically generated, and may not be correct\n\n  find_package(flatbuffers CONFIG REQUIRED)\n\n  target_link_libraries(main PRIVATE flatbuffers::flatbuffers)\n"
  }, {
    "name" : "glslang",
    "version>=" : "13.0.0#2",
    "$comment" : "    find_package(glslang CONFIG REQUIRED)\n\n    target_link_libraries(main PRIVATE glslang::OSDependent glslang::glslang glslang::MachineIndependent glslang::GenericCodeGen glslang::glslang-default-resource-limits glslang::OGLCompiler glslang::SPVRemapper glslang::SPIRV glslang::HLSL)\n"
  }, {
    "name" : "meshoptimizer",
    "version>=" : "0.20"
  }, {
    "name" : "libcoro",
    "version>=" : "0.11.1",
    "default-features" : false
  }, {
    "name" : "xxhash",
    "version>=" : "0.8.2"
  }, {
    "name" : "liburing",
    "version>=" : "2.7",
    "platform" : "linux"
  }, {
    "name" : "vcpkg-pkgconfig-get-modules",
    "version>=" : "2024-04-03"
  } ]
}